@charset "UTF-8";
/* ==========================================================================
   INUITCSS
   ========================================================================== */
/*!*
 * inuitcss, by @csswizardry
 *
 * github.com/inuitcss | inuitcss.com
 */
/**
 * This is an example inuitcss manifest file. DO NOT MODIFY THIS FILE DIRECTLY.
 * Instead, copy and paste it into your own CSS directory and make additions,
 * extension, and modifications there.
 */
/**
 * CONTENTS
 *
 * SETTINGS
 * Config...............Project-level configuration and feature switches.
 * Global...............Globally-available project settings.
 * Colors...............Our own colour settings and mappings.
 *
 * TOOLS
 * Functions............A small collection of useful functions.
 * Mixins...............Globally-available mixins.
 * Widths...............A mixin to quickly generate an arbitrary number of width
 *                      classes for use alongside our grid system.
 * Sass MQ..............Neat little wrapper for media queries.
 * Aliases..............Create shorter aliases for inuitcss’ default settings.
 *
 * GENERIC
 * Box-sizing...........Better default `box-sizing`.
 * Normalize.css........A level playing field using @necolas’ Normalize.css.
 * Reset................A tiny reset to complement Normalize.css.
 * Shared...............Sensibly and tersely share some global commonalities
 *                      (particularly useful when managing vertical rhythm).
 *
 * ELEMENTS
 * Page.................Set up our document’s default `font-size` and
 *                      `line-height`.
 * Headings.............Very minimal (i.e. only font-size information) for
 *                      headings 1 through 6.
 * Images...............Base image styles.
 * Tables...............Simple table styles.
 * Links................Basic hyperlink styles.
 *
 * OBJECTS
 * Wrapper..............Page constraint object.
 * Layout...............Generic layout module.
 * Media................Image- and text-like content side by side. The
 *                      poster-child of OOCSS.
 * List-bare............Lists with no bullets or indents.
 * List-inline..........A list whose items all site in a line.
 * Box..................Simple boxing abstraction.
 * Block................Image-on-top-of-text object.
 * Ratio................A container for maintaining aspect ratio of content.
 * Crop.................Provide a cropping context for media (images, etc.).
 *
 * COMPONENTS
 * Buttons..............inuitcss-branded buttons.
 * Bands................Horizontal content bands.
 * Page-head............Site’s main page header.
 * Page-foot............Site’s main page footer.
 * Lock-up..............The logo contained in the site’s header.
 * Logo.................inuitcss logo sprite.
 * Avatars..............Suite of different styles of avatar.
 * Bio-mini.............Miniature bios as used on the Team page.
 * Nav-primary..........Site’s main nav.
 * Nav-secondary........Sidebar-style navigation.
 * Nav-tertiary.........Footer-style navigation.
 * Pages................Page-level components.
 * Code.................Styled-up pieces of code.
 *
 * UTILITIES
 * Clearfix.............Bind our clearfix onto a utility class.
 * Widths...............Simple width helper classes.
 * Headings.............Reassigning our heading styles to helper classes.
 * Spacing..............Nudge bits of the DOM around with these spacing
 *                      classes.
 * Print................Reset-like styles taken from the HTML5 Boilerplate.
 *                      classes..
 * Hide.................Helper classes to hide content
 * Colors...............Our colour palette against some utility classes.
 */
/* ==========================================================================
   #BOX-SIZING
   ========================================================================== */
/**
 * More sensible default box-sizing:
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 */
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

/*! normalize.css v4.2.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* ==========================================================================
   #RESET
   ========================================================================== */
/**
 * A very simple reset that sits on top of Normalize.css.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
fieldset, legend,
figure,
hr {
  margin: 0;
  padding: 0;
}

/**
 * Remove trailing margins from nested lists.
 */
li > ul,
li > ol {
  margin-bottom: 0;
}

/**
 * Remove default table spacing.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* ==========================================================================
   #SHARED
   ========================================================================== */
/**
 * Shared declarations for certain elements.
 */
/**
 * Always declare margins in the same direction:
 * csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
hr,
table,
fieldset, figure,
pre {
  margin-bottom: 24px;
}

ul, ol,
dd {
  margin-left: 24px;
}

/* ==========================================================================
   #PAGE
   ========================================================================== */
/* ==========================================================================
   #PAGE
   ========================================================================== */
/**
 * Simple page-level setup.
 */
html {
  font-size: 1em;
  line-height: 1.5;
}

/**
 * 1. Use the system font everywhere.
 * 2. Nicer looking strokes.
 */
html {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  -webkit-font-smoothing: antialiased;
  /* [2] */
  color: #424242;
}

/* ==========================================================================
   #HEADINGS
   ========================================================================== */
/* ==========================================================================
   #HEADINGS
   ========================================================================== */
/**
 * Simple default styles for headings 1 through 6. Anything more opinionated
 * than simple font-size changes should likely be applied via classes (see:
 * http://csswizardry.com/2016/02/managing-typography-on-large-apps/).
 */
h1 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

h2 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

h3 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

h4 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

h5 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

h6 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: 500;
  letter-spacing: 0.033333333em;
  color: #2f4054;
}

/* ==========================================================================
   #IMAGES
   ========================================================================== */
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */
}

/**
 * 1. If a `width` and/or `height` attribute have been explicitly defined, let’s
 *    not make the image fluid.
 */
img[width],
img[height] {
  /* [1] */
  max-width: none;
}

/* ==========================================================================
   #TABLES
   ========================================================================== */
/**
 * 1. Ensure tables fill up as much space as possible.
 */
table {
  width: 100%;
  /* [1] */
}

/* ==========================================================================
   #LINKS
   ========================================================================== */
a {
  color: #4a8ec2;
  text-decoration: none;
}
a:hover, a:focus {
  color: #3774a2;
  text-decoration: underline;
}

/* ==========================================================================
   #WRAPPERS
   ========================================================================== */
/**
 * Page-level constraining and wrapping elements.
 */
.o-wrapper {
  padding-right: 24px;
  padding-left: 24px;
  margin-right: auto;
  margin-left: auto;
  max-width: 1200px;
}
.o-wrapper:after {
  content: "" !important;
  display: block !important;
  clear: both !important;
}

/* Size variants.
   ========================================================================== */
.o-wrapper--tiny {
  padding-right: 6px;
  padding-left: 6px;
}

.o-wrapper--small {
  padding-right: 12px;
  padding-left: 12px;
}

.o-wrapper--large {
  padding-right: 48px;
  padding-left: 48px;
}

.o-wrapper--huge {
  padding-right: 96px;
  padding-left: 96px;
}

/* ==========================================================================
   #LAYOUT
   ========================================================================== */
/**
 * Grid-like layout system.
 *
 * The Layout object provides us with a column-style layout system. This file
 * contains the basic structural elements, but classes should be complemented
 * with width Utilities, for example:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-width-1/2">
 *     </div>
 *     <div class="o-layout__item  u-width-1/2">
 *     </div>
 *   </div>
 *
 * The above will create a two-column structure in which each column will
 * fluidly fill half of the width of the parent. We can have more complex
 * systems:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-width-1/1  u-width-1/3@medium">
 *     </div>
 *     <div class="o-layout__item  u-width-1/2  u-width-1/3@medium">
 *     </div>
 *     <div class="o-layout__item  u-width-1/2  u-width-1/3@medium">
 *     </div>
 *   </div>
 *
 * The above will create a system in which the first item will be 100% width
 * until we enter our medium breakpoint, when it will become 33.333% width. The
 * second and third items will be 50% of their parent, until they also become
 * 33.333% width at the medium breakpoint.
 *
 * We can also manipulate entire layout systems by adding a series of Modifiers
 * to the `.o-layout` Block. For example:
 *
 *   <div class="o-layout  o-layout--reverse">
 *
 * This will reverse the displayed order of the system so that it runs in the
 * opposite order to our source, effectively flipping the system over.
 *
 *   <div class="o-layout  o-layout--[right|center]">
 *
 * This will cause the system to fill up from either the centre or the right
 * hand side. Default behaviour is to fill up the layout system from the left.
 *
 * There are plenty more options available to us: explore them below.
 */
/* Default/mandatory classes.
   ========================================================================== */
/**
 * 1. Allows us to use the layout object on any type of element.
 * 2. We need to defensively reset any box-model properties.
 * 3. Use the negative margin trick for multi-row grids:
 *    http://csswizardry.com/2011/08/building-better-grid-systems/
 */
.o-layout {
  display: block;
  /* [1] */
  margin: 0;
  /* [2] */
  padding: 0;
  /* [2] */
  list-style: none;
  /* [1] */
  margin-left: -24px;
  /* [3] */
  font-size: 0;
}

/**
 * 1. Allows us to manipulate grids vertically, with text-level properties,
 *    etc.
 * 2. Default item alignment is with the tops of each other, like most
 *    traditional grid/layout systems.
 * 3. By default, all layout items are full-width (mobile first).
 * 4. Gutters provided by left padding:
 *    http://csswizardry.com/2011/08/building-better-grid-systems/
 */
.o-layout__item {
  display: inline-block;
  /* [1] */
  vertical-align: top;
  /* [2] */
  width: 100%;
  /* [3] */
  padding-left: 24px;
  /* [4] */
  font-size: 1rem;
}

/* Gutter size modifiers.
   ========================================================================== */
/**
 * Tiny gutters between items.
 */
.o-layout--tiny {
  margin-left: -6px;
}
.o-layout--tiny > .o-layout__item {
  padding-left: 6px;
}

/**
 * Small gutters between items.
 */
.o-layout--small {
  margin-left: 12px;
}
.o-layout--small > .o-layout__item {
  padding-left: 12px;
}

/**
 * Large gutters between items.
 */
.o-layout--large {
  margin-left: -48px;
}
.o-layout--large > .o-layout__item {
  padding-left: 48px;
}

/**
 * Huge gutters between items.
 */
.o-layout--huge {
  margin-left: -96px;
}
.o-layout--huge > .o-layout__item {
  padding-left: 96px;
}

/**
 * No gutters between items.
 */
.o-layout--flush {
  margin-left: 0;
}
.o-layout--flush > .o-layout__item {
  padding-left: 0;
}

/* Vertical alignment modifiers.
   ========================================================================== */
/**
 * Align all grid items to the middles of each other.
 *
 * Input:
 *
 *   1 2 3 4 5
 *   1 2 - 4 5
 *   1 2 - 4 5
 *   - 2 - - 5
 *   - 2 - - 5
 *
 * Output:
 *
 *   - 2 - - 5
 *   1 2 - 4 5
 *   1 2 3 4 5
 *   1 2 - 4 5
 *   - 2 - - 5
 */
.o-layout--middle > .o-layout__item {
  vertical-align: middle;
}

/**
 * Align all grid items to the bottoms of each other.
 *
 * Input:
 *
 *   1 2 3 4 5
 *   1 2 - 4 5
 *   1 2 - 4 5
 *   - 2 - - 5
 *   - 2 - - 5
 *
 * Output:
 *
 *   - 2 - - 5
 *   - 2 - - 5
 *   1 2 - 4 5
 *   1 2 - 4 5
 *   1 2 3 4 5
 */
.o-layout--bottom > .o-layout__item {
  vertical-align: bottom;
}

/* Fill order modifiers.
   ========================================================================== */
/**
 * Fill up the layout system from the centre.
 *
 * Input:
 *
 *   1 2 3 - -
 *
 * Output:
 *
 *   - 1 2 3 -
 */
.o-layout--center {
  text-align: center;
}
.o-layout--center > .o-layout__item {
  text-align: left;
}

/**
 * Fill up the layout system from the right-hand side.
 *
 * Input:
 *
 *   1 2 3 - -
 *
 * Output:
 *
 *   - - 1 2 3
 */
.o-layout--right {
  text-align: right;
}
.o-layout--right > .o-layout__item {
  text-align: left;
}

/**
 * Reverse the rendered order of the grid system.
 *
 * Input:
 *
 *   1 2 3 4 5
 *
 * Output:
 *
 *   5 4 3 2 1
 */
.o-layout--reverse {
  direction: rtl;
}
.o-layout--reverse > .o-layout__item {
  direction: ltr;
  text-align: left;
}

/* ==========================================================================
   #MEDIA
   ========================================================================== */
/**
 * Place any image- and text-like content side-by-side, as per:
 * http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */
.o-media {
  display: block;
}
.o-media:after {
  content: "" !important;
  display: block !important;
  clear: both !important;
}

.o-media__img {
  float: left;
  margin-right: 24px;
}
.o-media__img > img {
  display: block;
}

.o-media__body {
  overflow: hidden;
  display: block;
}
.o-media__body,
.o-media__body > :last-child {
  margin-bottom: 0;
}

/* Size variants
   ========================================================================== */
/**
 * Modify the amount of space between our image and our text. We also have
 * reversible options for all available sizes.
 */
.o-media--tiny > .o-media__img {
  margin-right: 6px;
}
.o-media--tiny.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 6px;
}

.o-media--small > .o-media__img {
  margin-right: 12px;
}
.o-media--small.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 12px;
}

.o-media--large > .o-media__img {
  margin-right: 48px;
}
.o-media--large.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 48px;
}

.o-media--huge > .o-media__img {
  margin-right: 96px;
}
.o-media--huge.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 96px;
}

/* Reversed media objects
   ========================================================================== */
.o-media--reverse > .o-media__img {
  float: right;
  margin-right: 0;
  margin-left: 24px;
}

/* Gutterless media objects
   ========================================================================== */
.o-media--flush > .o-media__img {
  margin-right: 0;
  margin-left: 0;
}

/* ==========================================================================
   #LIST-BARE
   ========================================================================== */
/**
 * Strip list-like appearance from lists by removing their bullets, and any
 * indentation.
 */
.o-list-bare {
  list-style: none;
  margin-left: 0;
}

/* ==========================================================================
   #LIST-INLINE
   ========================================================================== */
/**
 * The list-inline object simply displays a list of items in one line.
 */
.o-list-inline {
  margin-left: 0;
  list-style: none;
}

.o-list-inline__item {
  display: inline-block;
}

/* Delimited list.
   ========================================================================== */
/**
 * By default, applying this class will comma separate your list items. You can
 * change the delimiter by predefining the following variable:
 */
.o-list-inline--delimited {
  font-size: 0;
}
.o-list-inline--delimited > .o-list-inline__item {
  font-size: 1rem;
}
.o-list-inline--delimited > .o-list-inline__item + .o-list-inline__item:before {
  content: ", ";
}

/* ==========================================================================
   #BOX
   ========================================================================== */
/**
 * The box object simply boxes off content. Extend with cosmetic styles in the
 * Components layer.
 *
 * 1. So we can apply the `.o-box` class to naturally-inline elements.
 */
.o-box {
  display: block;
  /* [1] */
  padding: 24px;
}
.o-box:after {
  content: "" !important;
  display: block !important;
  clear: both !important;
}
.o-box > :last-child {
  margin-bottom: 0;
}

/* Size variants
   ========================================================================== */
.o-box--flush {
  padding: 0;
}

.o-box--tiny {
  padding: 6px;
}

.o-box--small {
  padding: 12px;
}

.o-box--large {
  padding: 48px;
}

.o-box--huge {
  padding: 96px;
}

/* ==========================================================================
   #BLOCK
   ========================================================================== */
/**
 * Stacked image-with-text object. A simple abstraction to cover a very commonly
 * occurring design pattern.
 */
.o-block {
  display: block;
  text-align: center;
}

.o-block__img {
  margin-bottom: 24px;
  /* Size variants.
     ====================================================================== */
}
.o-block--flush > .o-block__img {
  margin-bottom: 0;
}
.o-block--tiny > .o-block__img {
  margin-bottom: 6px;
}
.o-block--small > .o-block__img {
  margin-bottom: 12px;
}
.o-block--large > .o-block__img {
  margin-bottom: 48px;
}
.o-block--huge > .o-block__img {
  margin-bottom: 96px;
}

.o-block__body {
  display: block;
}

/* Alignment variants.
   ========================================================================== */
.o-block--right {
  text-align: right;
}

.o-block--left {
  text-align: left;
}

/* ==========================================================================
   #RATIO
   ========================================================================== */
/**
 * Create ratio-bound content blocks, to keep media (e.g. images, videos) in
 * their correct aspect ratios.
 *
 * http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */
/**
 * 1. Default cropping is a 1:1 ratio (i.e. a perfect square).
 */
.o-ratio {
  overflow: hidden;
  position: relative;
  display: block;
}
.o-ratio:before {
  content: "";
  display: block;
  width: 100%;
  padding-bottom: 100%;
  /* [1] */
}

.o-ratio__content,
.o-ratio > iframe,
.o-ratio > embed,
.o-ratio > object {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

/* Ratio variants.
   ========================================================================== */
/**
 * Generate a series of ratio classes to be used like so:
 *
 *   <div class="o-ratio  o-ratio--16:9">
 *
 */
.o-ratio--2\:1:before {
  padding-bottom: 50%;
}

.o-ratio--4\:3:before {
  padding-bottom: 75%;
}

.o-ratio--16\:9:before {
  padding-bottom: 56.25%;
}

/* ==========================================================================
   #CROP
   ========================================================================== */
/**
 * Provide a cropping container in order to display media (usually images)
 * cropped to certain ratios.
 *
 * 1. Set up a positioning context in which the image can sit.
 * 2. This is the crucial part: where the cropping happens.
 */
.o-crop {
  position: relative;
  /* [1] */
  display: block;
  overflow: hidden;
  /* [2] */
}

/**
 * Apply this class to the content (usually `img`) that needs cropping.
 *
 * 1. Image’s default positioning is top-left in the cropping box.
 * 2. Make sure the media doesn’t stop itself too soon.
 */
.o-crop__content {
  position: absolute;
  top: 0;
  /* [1] */
  left: 0;
  /* [1] */
  max-width: none;
  /* [2] */
}

/**
 * We can position the media in different locations within the cropping area.
 */
.o-crop__content--right {
  right: 0;
  left: auto;
}

.o-crop__content--bottom {
  top: auto;
  bottom: 0;
}

.o-crop__content--center {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Crop-ratio variants.
   ========================================================================== */
/**
 * Generate a series of crop classes to be used like so:
 *
 *   <div class="o-crop  o-crop--16:9">
 *
 */
.o-crop--2\:1 {
  padding-bottom: 50%;
}

.o-crop--4\:3 {
  padding-bottom: 75%;
}

.o-crop--16\:9 {
  padding-bottom: 56.25%;
}

/* ==========================================================================
   #BUTTONS
   ========================================================================== */
/**
 * This is an example component. Extend inuitcss by building your own components
 * that make up your UI. Component classes are prefixed with a `c-`.
 */
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Fixes odd inner spacing in IE7.
 */
.c-btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  overflow: visible;
  /* [6] */
  padding: 12px 24px;
  transition: 0.333333333s;
  border-radius: 3px;
}

/* Style variants
   ========================================================================== */
.c-btn--primary {
  background-color: #4a8ec2;
}
.c-btn--primary, .c-btn--primary:hover, .c-btn--primary:active, .c-btn--primary:focus {
  text-decoration: none;
  /* [4] */
  color: #fff;
}
.c-btn--primary:hover, .c-btn--primary:focus {
  background-color: #3774a2;
}

.c-btn--secondary {
  background-color: #2f4054;
}
.c-btn--secondary, .c-btn--secondary:hover, .c-btn--secondary:active, .c-btn--secondary:focus {
  text-decoration: none;
  color: #fff;
}
.c-btn--secondary:hover, .c-btn--secondary:focus {
  background-color: #1d2733;
}

/**
 * 1. Artificially increase specificity to combat leaky `.band--* a {}` rules.
 */
.c-btn--tertiary {
  background-color: #fff;
}
.c-btn--tertiary.c-btn--tertiary, .c-btn--tertiary:hover, .c-btn--tertiary:active, .c-btn--tertiary:focus {
  text-decoration: none;
  color: #4a8ec2;
}
.c-btn--tertiary:hover, .c-btn--tertiary:focus {
  color: #4a8ec2;
}

/* Size variants
   ========================================================================== */
.c-btn--small {
  padding: 0.375rem 0.75rem;
}

.c-btn--large {
  padding: 1.5rem 3rem;
}

/* Ghost buttons
   ========================================================================== */
/**
 * Ghost buttons have see-through backgrounds and are bordered.
 */
.c-btn--ghost {
  border: 2px solid currentColor;
  padding: 10px 22px;
}
.c-btn--ghost, .c-btn--ghost:hover, .c-btn--ghost:active, .c-btn--ghost:focus {
  background: none;
}
.c-btn--ghost.c-btn--small {
  padding: 4px 10px;
}
.c-btn--ghost.c-btn--large {
  padding: 22px 46px;
}
.c-btn--ghost.c-btn--primary {
  color: #4a8ec2;
}
.c-btn--ghost.c-btn--primary:hover, .c-btn--ghost.c-btn--primary:focus {
  color: #3774a2;
}
.c-btn--ghost.c-btn--secondary {
  color: #2f4054;
}
.c-btn--ghost.c-btn--secondary:hover, .c-btn--ghost.c-btn--secondary:focus {
  color: #1d2733;
}
.c-btn--ghost.c-btn--tertiary {
  color: #fff;
}
.c-btn--ghost.c-btn--tertiary:hover, .c-btn--ghost.c-btn--tertiary:focus {
  color: #fff;
}

/* ==========================================================================
   #BANDS
   ========================================================================== */
/**
 * Long-form comment.
 *
 * This spans multiple lines and is also constrained to no longer than 80
 * characters in width.
 *
 * 1. Provide line-comments like this.
 */
.c-band {
  display: block;
  padding-top: 24px;
  padding-bottom: 24px;
}
.c-band > :last-child {
  margin-bottom: 0;
}

.c-band--small {
  padding-top: 12px;
  padding-bottom: 12px;
}

.c-band--center {
  text-align: center;
}

.c-band--primary {
  background-color: #4a8ec2;
}
.c-band--primary,
.c-band--primary a {
  color: #fff;
}

.c-band--secondary {
  background-color: #2f4054;
}
.c-band--secondary,
.c-band--secondary a {
  color: #fff;
}

/* ==========================================================================
   #PAGE-HEAD
   ========================================================================== */
.c-page-head {
  @inuit-clearfix ($args...);
  padding-top: 24px;
  padding-bottom: 24px;
}

.c-page-head__logo {
  float: left;
}

.c-page-head__nav {
  float: right;
}

/* ==========================================================================
   #PAGE-FOOT
   ========================================================================== */
.c-page-foot {
  padding-bottom: 0;
}
.c-page-foot a {
  text-decoration: underline;
  font-weight: bold;
}
.c-page-foot a:hover, .c-page-foot a:focus {
  color: #70a6cf;
}

.c-page-foot__region {
  font-size: 0.75rem;
  line-height: 2;
}

.c-page-foot__heading {
  font-size: 0.875rem;
  line-height: 1.714285714;
  font-weight: bold;
  color: #fff;
  border-bottom: 1px solid #415975;
  margin-bottom: 11px;
}

/* ==========================================================================
   #LOCKUP
   ========================================================================== */
.c-lockup {
  display: table;
}

.c-lockup__img,
.c-lockup__text {
  display: table-cell;
  vertical-align: middle;
}

.c-lockup__img {
  padding-right: 12px;
}

.c-lockup__text {
  font-weight: bold;
  font-size: 0.75rem;
  line-height: 2;
}

/* ==========================================================================
   #LOGO
   ========================================================================== */
.c-logo {
  display: inline-block;
  width: 48px;
  height: 48px;
  background-image: url(/assets/img/sprites/sprite-logo.png);
}
@media (min-width: 45em) {
  .c-logo {
    background-position: -48px 0;
    width: 72px;
    height: 72px;
  }
}
@media (min-width: 64em) {
  .c-logo {
    background-position: 0 -72px;
    width: 220px;
    height: 105px;
  }
}

/* ==========================================================================
   #AVATARS
   ========================================================================== */
.c-avatar {
  border-radius: 100%;
  width: 128px;
  height: 128px;
}

.c-avatar--small {
  width: 64px;
  height: 64px;
}

.c-avatar--large {
  width: 64px;
  height: 64px;
}

/* ==========================================================================
   #BIO-MINI
   ========================================================================== */
.c-bio-mini {
  padding: 24px;
  background-color: #4a8ec2;
  color: #fff;
}

.c-bio-mini__title {
  margin-bottom: 0;
  color: #fff;
}

/* ==========================================================================
   #NAV-PRIMARY
   ========================================================================== */
.c-nav-primary {
  line-height: 48px;
}
@media (min-width: 45em) {
  .c-nav-primary {
    line-height: 72px;
  }
}
@media (min-width: 64em) {
  .c-nav-primary {
    line-height: 105px;
  }
}

.c-nav-primary__link {
  display: inline-block;
  transition: 0.333333333s;
}
@media (min-width: 45em) {
  .c-nav-primary__link {
    border: 1px solid transparent;
    border-radius: 3px;
    line-height: 46px;
    padding-right: 22px;
    padding-left: 22px;
    text-decoration: none;
  }
}
.c-nav-primary__link:hover, .c-nav-primary__link:focus {
  border-color: currentColor;
}

/* ==========================================================================
   #NAV-SECONDARY
   ========================================================================== */
.c-nav-secondary {
  font-size: 0.75rem;
  line-height: 2;
  background-color: #2f4054;
}
@media (min-width: 45em) {
  .c-nav-secondary {
    font-size: 1rem;
    line-height: 1.5;
  }
}

.c-nav-secondary__link {
  display: block;
  padding: 6px;
  border-bottom: 1px solid #415975;
}
@media (min-width: 45em) {
  .c-nav-secondary__link {
    padding: 12px;
  }
}
.c-nav-secondary__link, .c-nav-secondary__link:hover, .c-nav-secondary__link:focus {
  color: #fff;
}

/* ==========================================================================
   #NAV-TERTIARY
   ========================================================================== */
.c-nav-tertiary {
  list-style: none;
  margin-left: 0;
}

/* ==========================================================================
   #PAGES
   ========================================================================== */
.c-page--home .c-page__home, .c-page--about .c-page__about, .c-page--docs .c-page__docs, .c-page--blog .c-page__blog {
  cursor: default;
  pointer-events: none;
  text-decoration: underline;
}
@media (min-width: 45em) {
  .c-page--home .c-page__home, .c-page--about .c-page__about, .c-page--docs .c-page__docs, .c-page--blog .c-page__blog {
    border-color: currentColor;
    text-decoration: none;
  }
}

/* ==========================================================================
   #CODE
   ========================================================================== */
@media (min-width: 45em) {
  .c-code-cta {
    font-size: 1.5rem;
    line-height: 1;
  }
}

/* ==========================================================================
   #CLEARFIX
   ========================================================================== */
/**
 * Attach our clearfix mixin to a utility class.
 */
.u-clearfix:after {
  content: "" !important;
  display: block !important;
  clear: both !important;
}

/* ==========================================================================
   #WIDTHS
   ========================================================================== */
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.u-2/3`) or a spoken-
 * word format (e.g. `.u-2-of-3`). Use these in your markup:
 *
 * <div class="u-7/12">
 *
 * The following will generate a 12 column grid system.
 */
.u-1\/12 {
  width: 8.333333333% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-1\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 8.333333333% !important;
}

.u-pull-1\/12 {
  position: relative;
  right: 8.333333333% !important;
  left: auto;
  /* [1] */
}

.u-2\/12 {
  width: 16.666666667% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-2\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 16.666666667% !important;
}

.u-pull-2\/12 {
  position: relative;
  right: 16.666666667% !important;
  left: auto;
  /* [1] */
}

.u-3\/12 {
  width: 25% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-3\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 25% !important;
}

.u-pull-3\/12 {
  position: relative;
  right: 25% !important;
  left: auto;
  /* [1] */
}

.u-4\/12 {
  width: 33.333333333% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-4\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 33.333333333% !important;
}

.u-pull-4\/12 {
  position: relative;
  right: 33.333333333% !important;
  left: auto;
  /* [1] */
}

.u-5\/12 {
  width: 41.666666667% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-5\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 41.666666667% !important;
}

.u-pull-5\/12 {
  position: relative;
  right: 41.666666667% !important;
  left: auto;
  /* [1] */
}

.u-6\/12 {
  width: 50% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-6\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 50% !important;
}

.u-pull-6\/12 {
  position: relative;
  right: 50% !important;
  left: auto;
  /* [1] */
}

.u-7\/12 {
  width: 58.333333333% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-7\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 58.333333333% !important;
}

.u-pull-7\/12 {
  position: relative;
  right: 58.333333333% !important;
  left: auto;
  /* [1] */
}

.u-8\/12 {
  width: 66.666666667% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-8\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 66.666666667% !important;
}

.u-pull-8\/12 {
  position: relative;
  right: 66.666666667% !important;
  left: auto;
  /* [1] */
}

.u-9\/12 {
  width: 75% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-9\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 75% !important;
}

.u-pull-9\/12 {
  position: relative;
  right: 75% !important;
  left: auto;
  /* [1] */
}

.u-10\/12 {
  width: 83.333333333% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-10\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 83.333333333% !important;
}

.u-pull-10\/12 {
  position: relative;
  right: 83.333333333% !important;
  left: auto;
  /* [1] */
}

.u-11\/12 {
  width: 91.666666667% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-11\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 91.666666667% !important;
}

.u-pull-11\/12 {
  position: relative;
  right: 91.666666667% !important;
  left: auto;
  /* [1] */
}

.u-12\/12 {
  width: 100% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */
.u-push-12\/12 {
  position: relative;
  right: auto;
  /* [1] */
  left: 100% !important;
}

.u-pull-12\/12 {
  position: relative;
  right: 100% !important;
  left: auto;
  /* [1] */
}

/**
 * Loop through our Sass MQ breakpoints and build a 12 column grid system for
 * each of them.
 */
@media (min-width: 20em) {
  .u-1\/12\@sm {
    width: 8.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-1\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 8.333333333% !important;
  }

  .u-pull-1\/12\@sm {
    position: relative;
    right: 8.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-2\/12\@sm {
    width: 16.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-2\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 16.666666667% !important;
  }

  .u-pull-2\/12\@sm {
    position: relative;
    right: 16.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-3\/12\@sm {
    width: 25% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-3\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 25% !important;
  }

  .u-pull-3\/12\@sm {
    position: relative;
    right: 25% !important;
    left: auto;
    /* [1] */
  }

  .u-4\/12\@sm {
    width: 33.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-4\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 33.333333333% !important;
  }

  .u-pull-4\/12\@sm {
    position: relative;
    right: 33.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-5\/12\@sm {
    width: 41.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-5\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 41.666666667% !important;
  }

  .u-pull-5\/12\@sm {
    position: relative;
    right: 41.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-6\/12\@sm {
    width: 50% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-6\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 50% !important;
  }

  .u-pull-6\/12\@sm {
    position: relative;
    right: 50% !important;
    left: auto;
    /* [1] */
  }

  .u-7\/12\@sm {
    width: 58.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-7\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 58.333333333% !important;
  }

  .u-pull-7\/12\@sm {
    position: relative;
    right: 58.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-8\/12\@sm {
    width: 66.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-8\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 66.666666667% !important;
  }

  .u-pull-8\/12\@sm {
    position: relative;
    right: 66.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-9\/12\@sm {
    width: 75% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-9\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 75% !important;
  }

  .u-pull-9\/12\@sm {
    position: relative;
    right: 75% !important;
    left: auto;
    /* [1] */
  }

  .u-10\/12\@sm {
    width: 83.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-10\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 83.333333333% !important;
  }

  .u-pull-10\/12\@sm {
    position: relative;
    right: 83.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-11\/12\@sm {
    width: 91.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-11\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 91.666666667% !important;
  }

  .u-pull-11\/12\@sm {
    position: relative;
    right: 91.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-12\/12\@sm {
    width: 100% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-12\/12\@sm {
    position: relative;
    right: auto;
    /* [1] */
    left: 100% !important;
  }

  .u-pull-12\/12\@sm {
    position: relative;
    right: 100% !important;
    left: auto;
    /* [1] */
  }
}
@media (min-width: 45em) {
  .u-1\/12\@md {
    width: 8.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-1\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 8.333333333% !important;
  }

  .u-pull-1\/12\@md {
    position: relative;
    right: 8.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-2\/12\@md {
    width: 16.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-2\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 16.666666667% !important;
  }

  .u-pull-2\/12\@md {
    position: relative;
    right: 16.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-3\/12\@md {
    width: 25% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-3\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 25% !important;
  }

  .u-pull-3\/12\@md {
    position: relative;
    right: 25% !important;
    left: auto;
    /* [1] */
  }

  .u-4\/12\@md {
    width: 33.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-4\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 33.333333333% !important;
  }

  .u-pull-4\/12\@md {
    position: relative;
    right: 33.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-5\/12\@md {
    width: 41.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-5\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 41.666666667% !important;
  }

  .u-pull-5\/12\@md {
    position: relative;
    right: 41.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-6\/12\@md {
    width: 50% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-6\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 50% !important;
  }

  .u-pull-6\/12\@md {
    position: relative;
    right: 50% !important;
    left: auto;
    /* [1] */
  }

  .u-7\/12\@md {
    width: 58.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-7\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 58.333333333% !important;
  }

  .u-pull-7\/12\@md {
    position: relative;
    right: 58.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-8\/12\@md {
    width: 66.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-8\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 66.666666667% !important;
  }

  .u-pull-8\/12\@md {
    position: relative;
    right: 66.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-9\/12\@md {
    width: 75% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-9\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 75% !important;
  }

  .u-pull-9\/12\@md {
    position: relative;
    right: 75% !important;
    left: auto;
    /* [1] */
  }

  .u-10\/12\@md {
    width: 83.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-10\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 83.333333333% !important;
  }

  .u-pull-10\/12\@md {
    position: relative;
    right: 83.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-11\/12\@md {
    width: 91.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-11\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 91.666666667% !important;
  }

  .u-pull-11\/12\@md {
    position: relative;
    right: 91.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-12\/12\@md {
    width: 100% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-12\/12\@md {
    position: relative;
    right: auto;
    /* [1] */
    left: 100% !important;
  }

  .u-pull-12\/12\@md {
    position: relative;
    right: 100% !important;
    left: auto;
    /* [1] */
  }
}
@media (min-width: 64em) {
  .u-1\/12\@lg {
    width: 8.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-1\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 8.333333333% !important;
  }

  .u-pull-1\/12\@lg {
    position: relative;
    right: 8.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-2\/12\@lg {
    width: 16.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-2\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 16.666666667% !important;
  }

  .u-pull-2\/12\@lg {
    position: relative;
    right: 16.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-3\/12\@lg {
    width: 25% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-3\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 25% !important;
  }

  .u-pull-3\/12\@lg {
    position: relative;
    right: 25% !important;
    left: auto;
    /* [1] */
  }

  .u-4\/12\@lg {
    width: 33.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-4\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 33.333333333% !important;
  }

  .u-pull-4\/12\@lg {
    position: relative;
    right: 33.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-5\/12\@lg {
    width: 41.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-5\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 41.666666667% !important;
  }

  .u-pull-5\/12\@lg {
    position: relative;
    right: 41.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-6\/12\@lg {
    width: 50% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-6\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 50% !important;
  }

  .u-pull-6\/12\@lg {
    position: relative;
    right: 50% !important;
    left: auto;
    /* [1] */
  }

  .u-7\/12\@lg {
    width: 58.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-7\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 58.333333333% !important;
  }

  .u-pull-7\/12\@lg {
    position: relative;
    right: 58.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-8\/12\@lg {
    width: 66.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-8\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 66.666666667% !important;
  }

  .u-pull-8\/12\@lg {
    position: relative;
    right: 66.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-9\/12\@lg {
    width: 75% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-9\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 75% !important;
  }

  .u-pull-9\/12\@lg {
    position: relative;
    right: 75% !important;
    left: auto;
    /* [1] */
  }

  .u-10\/12\@lg {
    width: 83.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-10\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 83.333333333% !important;
  }

  .u-pull-10\/12\@lg {
    position: relative;
    right: 83.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-11\/12\@lg {
    width: 91.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-11\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 91.666666667% !important;
  }

  .u-pull-11\/12\@lg {
    position: relative;
    right: 91.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-12\/12\@lg {
    width: 100% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-12\/12\@lg {
    position: relative;
    right: auto;
    /* [1] */
    left: 100% !important;
  }

  .u-pull-12\/12\@lg {
    position: relative;
    right: 100% !important;
    left: auto;
    /* [1] */
  }
}
@media (min-width: 90em) {
  .u-1\/12\@xl {
    width: 8.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-1\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 8.333333333% !important;
  }

  .u-pull-1\/12\@xl {
    position: relative;
    right: 8.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-2\/12\@xl {
    width: 16.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-2\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 16.666666667% !important;
  }

  .u-pull-2\/12\@xl {
    position: relative;
    right: 16.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-3\/12\@xl {
    width: 25% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-3\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 25% !important;
  }

  .u-pull-3\/12\@xl {
    position: relative;
    right: 25% !important;
    left: auto;
    /* [1] */
  }

  .u-4\/12\@xl {
    width: 33.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-4\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 33.333333333% !important;
  }

  .u-pull-4\/12\@xl {
    position: relative;
    right: 33.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-5\/12\@xl {
    width: 41.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-5\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 41.666666667% !important;
  }

  .u-pull-5\/12\@xl {
    position: relative;
    right: 41.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-6\/12\@xl {
    width: 50% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-6\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 50% !important;
  }

  .u-pull-6\/12\@xl {
    position: relative;
    right: 50% !important;
    left: auto;
    /* [1] */
  }

  .u-7\/12\@xl {
    width: 58.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-7\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 58.333333333% !important;
  }

  .u-pull-7\/12\@xl {
    position: relative;
    right: 58.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-8\/12\@xl {
    width: 66.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-8\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 66.666666667% !important;
  }

  .u-pull-8\/12\@xl {
    position: relative;
    right: 66.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-9\/12\@xl {
    width: 75% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-9\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 75% !important;
  }

  .u-pull-9\/12\@xl {
    position: relative;
    right: 75% !important;
    left: auto;
    /* [1] */
  }

  .u-10\/12\@xl {
    width: 83.333333333% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-10\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 83.333333333% !important;
  }

  .u-pull-10\/12\@xl {
    position: relative;
    right: 83.333333333% !important;
    left: auto;
    /* [1] */
  }

  .u-11\/12\@xl {
    width: 91.666666667% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-11\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 91.666666667% !important;
  }

  .u-pull-11\/12\@xl {
    position: relative;
    right: 91.666666667% !important;
    left: auto;
    /* [1] */
  }

  .u-12\/12\@xl {
    width: 100% !important;
  }

  /**
   * 1. Defensively reset any leftover or conflicting `left`/`right` values.
   */
  .u-push-12\/12\@xl {
    position: relative;
    right: auto;
    /* [1] */
    left: 100% !important;
  }

  .u-pull-12\/12\@xl {
    position: relative;
    right: 100% !important;
    left: auto;
    /* [1] */
  }
}
/* ==========================================================================
   #HEADINGS
   ========================================================================== */
/**
 * Redefine all of our basic heading styles against utility classes so as to
 * allow for double stranded heading hierarchy, e.g. we semantically need an H2,
 * but we want it to be sized like an H1:
 *
 *   <h2 class="u-h1"></h2>
 *
 */
.u-h1 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

.u-h2 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

.u-h3 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

.u-h4 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

.u-h5 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

.u-h6 {
  font-size: 1.375rem;
  line-height: 1.090909091;
}

/* ==========================================================================
   #SPACING
   ========================================================================== */
/**
 * Utility classes to put specific spacing values onto elements. The below loop
 * will generate us a suite of classes like:
 *
 *   .u-margin-top {}
 *   .u-padding-left-large {}
 *   .u-margin-right-small {}
 *   .u-padding {}
 *   .u-padding-right-none {}
 */
.u-padding {
  padding: 24px !important;
}

.u-padding-tiny {
  padding: 6px !important;
}

.u-padding-small {
  padding: 12px !important;
}

.u-padding-large {
  padding: 48px !important;
}

.u-padding-huge {
  padding: 96px !important;
}

.u-padding-none {
  padding: 0 !important;
}

.u-padding-top {
  padding-top: 24px !important;
}

.u-padding-top-tiny {
  padding-top: 6px !important;
}

.u-padding-top-small {
  padding-top: 12px !important;
}

.u-padding-top-large {
  padding-top: 48px !important;
}

.u-padding-top-huge {
  padding-top: 96px !important;
}

.u-padding-top-none {
  padding-top: 0 !important;
}

.u-padding-right {
  padding-right: 24px !important;
}

.u-padding-right-tiny {
  padding-right: 6px !important;
}

.u-padding-right-small {
  padding-right: 12px !important;
}

.u-padding-right-large {
  padding-right: 48px !important;
}

.u-padding-right-huge {
  padding-right: 96px !important;
}

.u-padding-right-none {
  padding-right: 0 !important;
}

.u-padding-bottom {
  padding-bottom: 24px !important;
}

.u-padding-bottom-tiny {
  padding-bottom: 6px !important;
}

.u-padding-bottom-small {
  padding-bottom: 12px !important;
}

.u-padding-bottom-large {
  padding-bottom: 48px !important;
}

.u-padding-bottom-huge {
  padding-bottom: 96px !important;
}

.u-padding-bottom-none {
  padding-bottom: 0 !important;
}

.u-padding-left {
  padding-left: 24px !important;
}

.u-padding-left-tiny {
  padding-left: 6px !important;
}

.u-padding-left-small {
  padding-left: 12px !important;
}

.u-padding-left-large {
  padding-left: 48px !important;
}

.u-padding-left-huge {
  padding-left: 96px !important;
}

.u-padding-left-none {
  padding-left: 0 !important;
}

.u-margin {
  margin: 24px !important;
}

.u-margin-tiny {
  margin: 6px !important;
}

.u-margin-small {
  margin: 12px !important;
}

.u-margin-large {
  margin: 48px !important;
}

.u-margin-huge {
  margin: 96px !important;
}

.u-margin-none {
  margin: 0 !important;
}

.u-margin-top {
  margin-top: 24px !important;
}

.u-margin-top-tiny {
  margin-top: 6px !important;
}

.u-margin-top-small {
  margin-top: 12px !important;
}

.u-margin-top-large {
  margin-top: 48px !important;
}

.u-margin-top-huge {
  margin-top: 96px !important;
}

.u-margin-top-none {
  margin-top: 0 !important;
}

.u-margin-right {
  margin-right: 24px !important;
}

.u-margin-right-tiny {
  margin-right: 6px !important;
}

.u-margin-right-small {
  margin-right: 12px !important;
}

.u-margin-right-large {
  margin-right: 48px !important;
}

.u-margin-right-huge {
  margin-right: 96px !important;
}

.u-margin-right-none {
  margin-right: 0 !important;
}

.u-margin-bottom {
  margin-bottom: 24px !important;
}

.u-margin-bottom-tiny {
  margin-bottom: 6px !important;
}

.u-margin-bottom-small {
  margin-bottom: 12px !important;
}

.u-margin-bottom-large {
  margin-bottom: 48px !important;
}

.u-margin-bottom-huge {
  margin-bottom: 96px !important;
}

.u-margin-bottom-none {
  margin-bottom: 0 !important;
}

.u-margin-left {
  margin-left: 24px !important;
}

.u-margin-left-tiny {
  margin-left: 6px !important;
}

.u-margin-left-small {
  margin-left: 12px !important;
}

.u-margin-left-large {
  margin-left: 48px !important;
}

.u-margin-left-huge {
  margin-left: 96px !important;
}

.u-margin-left-none {
  margin-left: 0 !important;
}

/* ==========================================================================
   #PRINT
   ========================================================================== */
/**
 * Very crude, reset-like styles taken from the HTML5 Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/5.3.0/dist/doc/css.md#print-styles
 * https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css#L205-L282
 */
@media print {
  /**
   * 1. Black prints faster: http://www.sanbeiji.com/archives/953
   */
  *,
  *:before,
  *:after,
  *:first-letter,
  *:first-line {
    background: transparent !important;
    color: #000 !important;
    /* [1] */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  /**
   * Don't show links that are fragment identifiers, or use the `javascript:`
   * pseudo protocol.
   */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /**
   * Printing Tables: http://css-discuss.incutio.com/wiki/Printing_Tables
   */
  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}
/* ==========================================================================
   #HIDE
   ========================================================================== */
/**
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.u-hidden-visually {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

/**
 * Hide visually and from screen readers.
 */
.u-hidden {
  display: none !important;
}

/* ==========================================================================
   #COLORS
   ========================================================================== */
/**
 * Attach our colour palette to some utility classes.
 */
.u-color-pale {
  color: #fff !important;
}

.u-color-pale-bg {
  background-color: #fff !important;
}

.u-color-pale-border {
  border-color: #fff !important;
}

.u-color-primary {
  color: #4a8ec2 !important;
}

.u-color-primary-bg {
  background-color: #4a8ec2 !important;
}

.u-color-primary-border {
  border-color: #4a8ec2 !important;
}

.u-color-primary-highlight {
  color: #70a6cf !important;
}

.u-color-primary-highlight-bg {
  background-color: #70a6cf !important;
}

.u-color-primary-highlight-border {
  border-color: #70a6cf !important;
}

.u-color-primary-shadow {
  color: #3774a2 !important;
}

.u-color-primary-shadow-bg {
  background-color: #3774a2 !important;
}

.u-color-primary-shadow-border {
  border-color: #3774a2 !important;
}

.u-color-secondary {
  color: #2f4054 !important;
}

.u-color-secondary-bg {
  background-color: #2f4054 !important;
}

.u-color-secondary-border {
  border-color: #2f4054 !important;
}

.u-color-secondary-highlight {
  color: #415975 !important;
}

.u-color-secondary-highlight-bg {
  background-color: #415975 !important;
}

.u-color-secondary-highlight-border {
  border-color: #415975 !important;
}

.u-color-secondary-shadow {
  color: #1d2733 !important;
}

.u-color-secondary-shadow-bg {
  background-color: #1d2733 !important;
}

.u-color-secondary-shadow-border {
  border-color: #1d2733 !important;
}

.u-color-grey-light {
  color: #868686 !important;
}

.u-color-grey-light-bg {
  background-color: #868686 !important;
}

.u-color-grey-light-border {
  border-color: #868686 !important;
}

.u-color-grey-dark {
  color: #424242 !important;
}

.u-color-grey-dark-bg {
  background-color: #424242 !important;
}

.u-color-grey-dark-border {
  border-color: #424242 !important;
}

.c-title-huge {
  font-size: 1.5rem;
  line-height: 1;
  font-weight: 200;
}
@media (min-width: 20em) {
  .c-title-huge {
    font-size: 7.5vw;
  }
}
@media (min-width: 60em) {
  .c-title-huge {
    font-size: 4.5rem;
    line-height: 1;
    font-weight: 100;
  }
}

/*# sourceMappingURL=main.css.map */
